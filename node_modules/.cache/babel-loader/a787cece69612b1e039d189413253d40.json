{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\src\\\\components\\\\Record.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as RecordsAPI from '../utils/RecordsApi';\n\nvar Record =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Record, _Component);\n\n  function Record() {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Record).call(this));\n    _this.state = {\n      edit: false\n    };\n    return _this;\n  }\n\n  _createClass(Record, [{\n    key: \"handleToggle\",\n    value: function handleToggle() {\n      this.setState({\n        edit: !this.state.edit\n      });\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var record = {\n        date: this.refs.date.value,\n        title: this.refs.title.value,\n        amount: Number.parseInt(this.refs.amount.value, 0)\n      };\n      RecordsAPI.update(this.props.record.id, record).then(function (response) {\n        _this2.setState({\n          edit: false\n        });\n\n        _this2.props.handelEditRecord(_this2.props.record, response.data);\n      }).catch(function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"recordRow\",\n    value: function recordRow() {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.record.date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.record.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.record.amount), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info mr-1\",\n        onClick: this.handleToggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }, {\n    key: \"recordForm\",\n    value: function recordForm() {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.record.date,\n        ref: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.record.title,\n        ref: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.record.amount,\n        ref: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info mr-1\",\n        onClick: this.handleEdit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handleToggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.edit) {\n        return this.recordForm();\n      } else {\n        return this.recordRow();\n      }\n    }\n  }]);\n\n  return Record;\n}(Component);\n\nexport { Record as default };\nRecord.propTypes = {\n  id: PropTypes.string,\n  date: PropTypes.string,\n  title: PropTypes.string,\n  amount: PropTypes.number\n};","map":{"version":3,"sources":["C:\\Users\\zoe lin\\React project\\react-app\\src\\components\\Record.js"],"names":["React","Component","PropTypes","RecordsAPI","Record","state","edit","setState","event","preventDefault","record","date","refs","value","title","amount","Number","parseInt","update","props","id","then","response","handelEditRecord","data","catch","error","console","log","message","handleToggle","bind","handle","handleEdit","recordForm","recordRow","propTypes","string","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as RecordsAPI from '../utils/RecordsApi'\r\n\r\nexport default class Record extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      edit:false\r\n    };\r\n  }\r\n\r\n  handleToggle(){\r\n    this.setState({\r\n      edit: !this.state.edit\r\n    });\r\n  }\r\n\r\n  handleEdit(event){\r\n    event.preventDefault();\r\n    const record ={\r\n      date:this.refs.date.value,\r\n      title:this.refs.title.value,\r\n      amount:Number.parseInt(this.refs.amount.value, 0)\r\n    }; \r\n\r\n    RecordsAPI.update(this.props.record.id, record).then(\r\n      response => {\r\n        this.setState({edit: false});\r\n        this.props.handelEditRecord(this.props.record, response.data)\r\n      }\r\n    ).catch(\r\n      error => console.log(error.message)\r\n    )\r\n  }\r\n\r\n\r\n  recordRow(){\r\n    return (\r\n      <tr>\r\n        <td>{this.props.record.date}</td>\r\n        <td>{this.props.record.title}</td>\r\n        <td>{this.props.record.amount}</td>\r\n        <td>\r\n          <button className=\"btn btn-info mr-1\" onClick={this.handleToggle.bind(this)}>Edit</button>\r\n          <button className=\"btn btn-danger\" onClick={this.handle}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  recordForm(){\r\n    return (\r\n      <tr>\r\n        <td><input type=\"text\" className=\"form-control\" defaultValue={this.props.record.date} ref=\"date\"/></td>\r\n        <td><input type=\"text\" className=\"form-control\" defaultValue={this.props.record.title} ref=\"title\"/></td>\r\n        <td><input type=\"text\" className=\"form-control\" defaultValue={this.props.record.amount} ref=\"amount\"/></td>\r\n        <td>\r\n          <button className=\"btn btn-info mr-1\" onClick={this.handleEdit.bind(this)}>Update</button>\r\n          <button className=\"btn btn-danger\" onClick={this.handleToggle.bind(this)}>Cancel</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n \r\n  render() {\r\n    if(this.state.edit){\r\n     return this.recordForm()\r\n    }else{\r\n     return this.recordRow()\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nRecord.propTypes = {\r\n   id:PropTypes.string,\r\n   date:PropTypes.string,\r\n   title:PropTypes.string,\r\n   amount:PropTypes.number\r\n}\r\n"]},"metadata":{},"sourceType":"module"}