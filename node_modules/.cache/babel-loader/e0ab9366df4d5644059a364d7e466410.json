{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\zoe lin\\\\React project\\\\react-app\\\\src\\\\components\\\\Records.js\";\nimport React, { Component } from 'react';\nimport Record from './Record';\nimport RecordForm from './RecordForm';\nimport AmountBox from './AmountBox';\nimport * as RecordsAPI from '../utils/RecordsApi';\n\nvar Records =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Records, _Component);\n\n  function Records() {\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Records).call(this));\n    _this.state = {\n      error: null,\n      isLoad: false,\n      records: []\n    };\n    return _this;\n  }\n\n  _createClass(Records, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      RecordsAPI.getAll().then(function (response) {\n        return _this2.setState({\n          isLoad: true,\n          records: response.data\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          isLoad: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"addRecord\",\n    value: function addRecord(record) {\n      this.setState({\n        error: null,\n        isLoad: true,\n        records: _toConsumableArray(this.state.records).concat([record])\n      });\n    }\n  }, {\n    key: \"updateRecord\",\n    value: function updateRecord(record, data) {\n      var recordIndex = this.state.records.indexOf(record);\n      var newRecords = this.state.records.map(function (item, index) {\n        if (index !== recordIndex) {\n          return item;\n        }\n\n        return _objectSpread({}, item, data);\n      });\n      this.setState({\n        records: newRecords\n      });\n    }\n  }, {\n    key: \"deleteRecord\",\n    value: function deleteRecord(record) {\n      var recordIndex = this.state.records.indexOf(record);\n      var newRecords = this.state.records.filter(function (item, index) {\n        return index !== recordIndex;\n      });\n      this.setState({\n        records: newRecords\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isLoad = _this$state.isLoad,\n          error = _this$state.error,\n          records = _this$state.records;\n      var recordsComponents;\n\n      if (error) {\n        recordsComponents = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoad) {\n        recordsComponents = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Loading....\");\n      } else {\n        recordsComponents = React.createElement(\"table\", {\n          className: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Date\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Amount\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Action\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, records.map(function (record) {\n          return React.createElement(Record, {\n            key: record.id,\n            record: record,\n            handelEditRecord: _this3.updateRecord.bind(_this3),\n            handelDeleteRecord: _this3.deleteRecord.bind(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          });\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Records\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Records\"), React.createElement(\"div\", {\n        className: \"row mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(AmountBox, {\n        text: \"Credit\",\n        type: \"success\",\n        amount: this.cr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(AmountBox, {\n        text: \"Debit\",\n        type: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(AmountBox, {\n        text: \"Balance\",\n        type: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(RecordForm, {\n        handelNewReocrd: this.addRecord.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), recordsComponents);\n    }\n  }]);\n\n  return Records;\n}(Component);\n\nexport default Records;","map":{"version":3,"sources":["C:\\Users\\zoe lin\\React project\\react-app\\src\\components\\Records.js"],"names":["React","Component","Record","RecordForm","AmountBox","RecordsAPI","Records","state","error","isLoad","records","getAll","then","response","setState","data","catch","record","recordIndex","indexOf","newRecords","map","item","index","filter","recordsComponents","message","id","updateRecord","bind","deleteRecord","cr","addRecord"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Record from './Record';\nimport RecordForm from './RecordForm';\nimport AmountBox from './AmountBox';\n\nimport * as RecordsAPI from '../utils/RecordsApi'\n\nclass Records extends Component {\n  constructor(){\n    super();\n    this.state={\n      error:null,\n      isLoad:false,\n      records:[]\n    }\n  }\n  \n  componentDidMount(){\n    RecordsAPI.getAll().then(\n      response =>this.setState({\n        isLoad:true,\n        records:response.data\n      })\n    ).catch(\n      error => this.setState({\n        isLoad:true,\n        error\n      })\n    )    \n  }\n\n  addRecord(record){\n     this.setState({\n      error:null,\n      isLoad:true,\n      records:[\n        ...this.state.records,\n        record\n      ]\n     })\n  }\n\n  updateRecord(record, data){\n      const recordIndex = this.state.records.indexOf(record);\n      const newRecords = this.state.records.map((item, index)=>{\n        if(index !== recordIndex){\n          return item;\n        }\n        return{\n          ...item,\n          ...data\n        };\n      });\n      this.setState({\n        records: newRecords\n      })\n  }\n\n  deleteRecord(record){\n    const recordIndex = this.state.records.indexOf(record);\n    const newRecords= this.state.records.filter( (item, index) => index !== recordIndex);\n    this.setState({\n      records: newRecords\n    })\n  }\n\n  render() {\n    const { isLoad, error, records} =  this.state;\n    let recordsComponents;\n   if(error){\n     recordsComponents = <div>Error: {error.message}</div>; \n   }else if(!isLoad){\n    recordsComponents = <div>Loading....</div>;\n   }else{\n     recordsComponents = ( \n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Title</th>\n                <th>Amount</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n   {records.map((record) => \n    (<Record key={record.id}\n             record={record}  \n             handelEditRecord={this.updateRecord.bind(this)}  \n             handelDeleteRecord={this.deleteRecord.bind(this)}/>\n    ))}\n            </tbody>\n          </table>      \n      );\n   }\n   return(\n    <div className=\"Records\">\n    <h2>Records</h2>\n    <div className=\"row mb-3\">\n      <AmountBox text=\"Credit\" type=\"success\" amount={this.cr}/>\n      <AmountBox text=\"Debit\" type=\"danger\"/>\n      <AmountBox text=\"Balance\" type=\"info\"/>\n    </div>\n    <RecordForm  handelNewReocrd={this.addRecord.bind(this)} />\n    {recordsComponents}\n    </div>\n   )\n  }\n}\n\nexport default Records;\n"]},"metadata":{},"sourceType":"module"}